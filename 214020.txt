5. Поврзете го локалниот репозиториум со оддалечениот репозиториум
-- најпрвин преку command prompt влегуваме во папката што сме ја креирале како локален репозиториум
-- потоа ги извршуваме следните наредби
-- со наредбата clone се остварува поврзувањето со оддалечениот репозиториум

git init
git clone https://github.com/alexander-acko/SI_2023_lab1_214020.git

6. Додадете README.md датотека во која ќе се потпишете (име, презиме, број на индекс). Направете commit со порака Initial commit.
-- се користи echo командата за внесениот текст да се зачува во датотеката README.md
-- потоа оваа датотека се додава во репозиториумот
-- на крај се прави commit со соодветниот commit message

echo "Александар Атанасоски 214020" >> README.md 
git add README.md
git commit -m "Initial commit"

7. Додадете фајл SILab1.java и ископирајте ја содржината на класата од тука. Направете commit со порака Add java class.
-- најпрвин со текст едитор се креира фајлот SILab1.java и се копира соодветниот код и се снима фајлот на локалниот репозиториум
-- потоа креираниот фајл се додава во репозиториумот на сличен начин како во чекорот 6

git add SILab1.java
git commit -m "Add java class"

8. Синхронизирајте ги сите гранки со оддалечениот репозиториум.
-- синхронизацијата се прави со командата push, при што претходно origin треба да се асоцира со далечниот репозиториум

git remote add origin https://github.com/alexander-acko/SI_2023_lab1_214020.git
git push -u origin master

9. Отворете три гранки (сите да се разгрануваат од master гранката): bug1, bug2 и bug3.

git branch bug1
git branch bug2
git branch bug3

10. Префрлете се на гранката bug1.

git checkout bug1

11. Поправете ја грешката во for циклусот кој се користи за читање на N-те броеви од стандарден влез. Направете commit со пораката Fix wrong loop for reading.
-- со помош на текст едиторот nano се едитира кодот и се поправа грешката, по што се снима фајлот
-- потоа се прави commit со соодветната commiit порака

nano SILab1.java
git add SILab1.java
git commit -m "Fix wrong loop for reading"

12. Префрлете се на гранката bug2.

git checkout bug2

13.Поправете ја грешката во методот filterOddNumbers. Направете commit со пораката Fix wrong condition in filterOddNumbers.

nano SILab1.java
git add SILab1.java
git commit -m "Fix wrong condition in filterOddNumbers"

14. Префрлете се на гранката bug3.

git checkout bug3

15.Поправете ја грешката во методот sumEvenNumbers. Направете commit со порака Fix method sumEvenNumbers.

nano SILab1.java
git add SILab1.java
git commit -m "Fix method sumEvenNumbers"

16. Синхронизирајте ги сите гранки со оддалечениот репозиториум.

git push --all

17. Префрлете се на гранката master.

git checkout master

18. Спојте ја гранката bug1 кон гранката master.
-- овде нема никаков проблем за спојување на bug1 гранката со master

git merge bug1

19. Синхронизирајте ги сите гранки со оддалечениот репозиториум.

git push --all

20. Спојте ја гранката bug2 кон гранката master.
-- во овој случај се појави предупредувачки прозорец со следната содржина
Merge branch 'bug2'
# Please enter a commit message to explain why this merge is necessary,
# especially if it merges an updated upstream into a topic branch.
#
# Lines starting with '#' will be ignored, and an empty message aborts
# the commit.

се користи следното Merge made by the 'ort' strategy.

git merge bug2

21. Синхронизирајте ги сите гранки со оддалечениот репозиториум.

git push --all

22. Префрлете се на гранката bug3.

git checkout bug3

23. Направете rebase спрема гранката master.

git rebase master

24. Префрлете се на гранката master.

git checkout master

25. Спојте ја гранката bug3 кон гранката master.

git merge bug3

26. Синхронизирајте ги сите гранки со оддалечениот репозиториум. (Доколку е потребно, употребете --force за гранката bug3).

git push --all

-- по оваа наредба се случи грешка
 ! [rejected]        bug3 -> bug3 (non-fast-forward)
error: failed to push some refs to 'https://github.com/alexander-acko/SI_2023_lab1_214020.git'
hint: Updates were rejected because a pushed branch tip is behind its remote
hint: counterpart. Check out this branch and integrate the remote changes
hint: (e.g. 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
-- следно се искористи наредбата

git push --all --force

-- по што промените се запишаа на оддалечениот репозиториум

27. Додадете датотеката logs.txt во која ќе ги ископирате досегашните git логови. Додадете ја и датотеката INDEX.txt (каде што наместо INDEX ќе стои вашиот број на индекс) во која водевте документација додека ја решававте оваа лабораториска вежба. Направете последен commit со порака Final commit.
-- во локалниот репозиториум се снима фајлот logs.txt кој паралелно се генерираше во текст едитор додека траеше изработката на ллабораториската вежба
-- потоа се додава соодветната датотека со commit пораката

echo "214020" >> 214020.txt
git add logs.txt 214020.txt
git commit -m "Final commit"

28. Синхронизирајте ги сите гранки со оддалечениот репозиториум.

git push --all

